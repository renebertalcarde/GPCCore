@model Module.DB.tblLeaveApplication
@{
    UserAccess access = coreApp.Cache.Get().userAccess;
}

@Html.Hidden("CanAccessLeaveApplications", access.CanAccessLeaveApplications)
@Html.Hidden("CanApproveLeaveApplications", access.CanApproveLeaveApplications)
@Html.HiddenFor(m => m.Id)

    <div class="modal-view-ui pattern-bg">
        <div class="view-title">
            @Html.DisplayFor(model => model.LeaveType.Description)
        </div>
        <div class="row">
            <div class="col-sm-6">
                <ul class="list-group">
                    <li class="list-group-item">
                        <label>Application Id</label>
                        <div>
                            @Html.DisplayFor(model => model.Id)
                        </div>
                    </li>
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.Date_Desc)
                        <div>
                            @Html.DisplayFor(model => model.Date_Desc)
                        </div>
                    </li>
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.Commutation_Requested)
                        <div>
                            @(Model.Commutation_Requested ? "Yes" : "No")
                        </div>
                    </li>
                </ul>
            </div>
            <div class="col-sm-6">
                <ul class="list-group">
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.Reason)
                        <div>
                            @Html.DisplayMultiLineFor(model => model.Reason)
                        </div>
                    </li>
                    @if (Model.HasSupportFile)
                    {
                        <li class="list-group-item">
                            <label>Support File</label>
                            <div>
                                @Html.Partial("_Helper_Photo", new ViewDataDictionary {
                                    { "url", Url.Action("GetLeaveSupportFile", "HLHome", new { area = "", id = Model.Id }) },
                                    { "control-name", "SupportFile" },
                                    { "readonly", true }
                                })
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>

        @if (Model.IsApproved)
        {
            <div class="row">
                <div class="col-sm-12">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <label>Approved With-Pay</label>
                            <div>
                                @Html.DisplayFor(model => model.Approved_Date_Desc)
                            </div>
                        </li>
                        <li class="list-group-item">
                            <label>Approved Without-Pay</label>
                            <div>
                                @Html.Partial("~/Areas/EmployeeModule/Views/MyLeaveApplications/_wopay.cshtml", Model)
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        }


        <div class="row">
            <div class="col-sm-12">
                <ul class="list-group">

                    <li class="list-group-item">
                        @Html.LabelFor(model => model.Application_Status_Desc)
                        <div class="@(Model.IsApproved ? "text-success" : Model.IsDenied ? "text-danger" : Model.IsReturned ? "text-warning" : "")">
                            @Html.DisplayFor(model => model.Application_Status_Desc)
                        </div>
                    </li>

                    @if (Model.HasBeenSubmitted)
                    {
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.DateSubmitted)
                            <div>
                                @Html.DisplayFor(model => model.DateSubmitted)
                            </div>
                        </li>
                    }

                    @if (Model.IsApproved)
                    {
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.ApprovedBy)
                            <div>
                                @Html.DisplayFor(model => model.ApprovedBy)<br />
                                @Html.DisplayFor(modelItem => Model.ApproveDate)
                            </div>
                        </li>
                    }
                    else if (Model.IsDenied)
                    {
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.DeniedBy)
                            <div>
                                @Html.DisplayFor(model => model.DeniedBy)<br />
                                @Html.DisplayFor(modelItem => Model.DenyDate)
                            </div>
                        </li>
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.DenyMessage)
                            <div>
                                @Html.DisplayMultiLineFor(model => model.DenyMessage)
                            </div>
                        </li>
                    }
                    else if (Model.IsReturned)
                    {
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.ReturnedBy)
                            <div>
                                @Html.DisplayFor(model => model.ReturnedBy)<br />
                                @Html.DisplayFor(modelItem => Model.ReturnDate)
                            </div>
                        </li>
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.ReturnMessage)
                            <div>
                                @Html.DisplayMultiLineFor(model => model.ReturnMessage)
                            </div>
                        </li>
                    }
                </ul>

            </div>

        </div>



        @if (Model.IsRecommended)
        {
            bool disapprove = Model.RecommendAction != true;

            <div class="row">
                <div class="col-sm-12">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <label>Recommendation</label>
                            <div>
                                <div class="@(disapprove ? "text-danger" : "")">
                                    @Html.DisplayFor(model => model.RecommendAction_Desc)
                                </div>
                                <div class="small">
                                    by @Model.RecommendedBy
                                </div>
                            </div>
                        </li>
                        @if (disapprove)
                        {
                            <li class="list-group-item">
                                <label>Due to</label>
                                <div>
                                    @Html.DisplayMultiLineFor(model => model.RecommendMessage)
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>