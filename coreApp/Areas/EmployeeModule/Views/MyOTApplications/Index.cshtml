@model List<Module.DB.tblOTApplication>
@using Module.DB

@{
    ViewBag.Title = "My Overtime Applications";
    

    Module.DB.tblEmployee employee = (Module.DB.tblEmployee)ViewBag.Employee;

}

@section Breadcrumbs {
    @Html.Partial("_Breadcrumbs", new List<Breadcrumb>() { new Breadcrumb { Description = ViewBag.Title } })
}

@section Scripts {
    <script>
        function load(e) {
            if (e.viewType == 'view') {
                var hasBeenSubmitted = $('#HasBeenSubmitted').val() == 'True';

                var editBtn = e.modal.find('.btn-edit');
                var deleteBtn = e.modal.find('.btn-delete');
                var printBtn = e.modal.find('.btn-print');
                var dlWordBtn = e.modal.find('.btn-dlword');

                var submitBtn = e.modal.find('.btn-submit');
                var link = submitBtn.attr('data-link-tmp');

                submitBtn.unbind('click').bind('click', function (ee) {
                    ee.preventDefault();

                    modalConfirm('Are you sure you want to submit this overtime application?', function (ret) {
                        if (ret) {
                            $.post(vdUrl(link), null, function (res) {
                                if (res.IsSuccessful) {
                                    sessionStorage.clientMessage = res.Remarks;
                                    window.location.reload(true);
                                } else {
                                    modalMessage(res.Err.split('\n'), 'Overtime Application', true);
                                }
                            }, 'json');
                        }
                    });

                });

                var printlink = printBtn.attr('data-link-tmp');

                printBtn.unbind('click').bind('click', function (ee) {
                    ee.preventDefault();
                    window.open(vdUrl(printlink + '?dlWord=false'), '_blank');
                });

                dlWordBtn.unbind('click').bind('click', function (ee) {
                    ee.preventDefault();
                    window.open(vdUrl(printlink + '?dlWord=true'), '_blank');
                });

                if (hasBeenSubmitted) {
                    printBtn.parent().show();
                    editBtn.hide();
                    deleteBtn.hide();
                    submitBtn.hide();
                } else {
                    printBtn.parent().hide();
                    editBtn.show();
                    deleteBtn.show();
                    submitBtn.show();
                }
            } else {
                var form = e.modal.find('.modal-body form');
                form.find('textarea').unbind();
            }

            return e;
        }

        function applyPeriod(start, end) {
            $('#StartDate').val(start);
            $('#EndDate').val(end);
        }
    </script>
}

<div class="table-responsive">
    <table class="tbl-1 display table table-bordered table-striped table-list" cellspacing="0" width="100%"
           modal-target modal-start="view" modal-load-callback="load"  modal-create-width="modal-xl" modal-edit-width="modal-xl" modal-view-width="modal-xl"
           modal-view-url="/My/OTApplications/Details/{0}" modal-edit-url="/My/OTApplications/Edit/{0}" modal-delete-url="/My/OTApplications/Delete" modal-create-url="/My/OTApplications/Create">
        <thead>
            <tr>
                <th class="idcol">
                    Id
                </th>
                <th>
                    Period
                </th>
                <th>
                    Purpose
                </th>
                <th>
                    Time
                </th>
                <th>
                    Breaks
                </th>
                <th>
                    Days
                </th>
                <th>
                    Submitted
                </th>
                <th>
                    Served By
                </th>
                <th>
                    Status
                </th>
                <th>
                    Message
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (Module.DB.tblOTApplication item in Model)
            {
                tblOTTemplate template = coreApp.Cache.Get_Tables().OTTemplates.Where(x => x.Id == item.OTTemplateId).Single();

                <tr record-id="@item.Id">
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date_Desc)
                    </td>
                    <td>
                        @Html.DisplayMultiLineFor(modelItem => item.Remarks)
                    </td>
                    <td>
                        @Html.DisplayFor(model => template.TimeString)
                    </td>
                    <td>
                        @Html.DisplayFor(model => template.AutoBreak) Hours
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => template.Days)
                    </td>
                    <td>
                        @if (item.HasBeenSubmitted)
                        {
                            @Html.DisplayFor(modelItem => item.DateSubmitted)
                        }
                    </td>
                    <td>
                        @if (item.IsApproved)
                        {
                            @Html.DisplayFor(modelItem => item.ApprovedBy)<br />
                                @Html.DisplayFor(modelItem => item.ApproveDate)
                        }
                        else if (item.IsDenied)
                        {
                            @Html.DisplayFor(modelItem => item.DeniedBy)<br />
                                @Html.DisplayFor(modelItem => item.DenyDate)
                        }
                        else if (item.IsReturned)
                        {
                            @Html.DisplayFor(modelItem => item.ReturnedBy)<br />
                                @Html.DisplayFor(modelItem => item.ReturnDate)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Application_Status_Desc)
                    </td>
                    <td>
                        @if (item.IsDenied)
                        {
                            @Html.DisplayMultiLineFor(modelItem => item.DenyMessage)
                        }
                        else if (item.IsReturned)
                        {
                            @Html.DisplayMultiLineFor(modelItem => item.ReturnMessage)
                        }
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>


@section FormActions {
    <button class="btn btn-sm btn-default btn-create" onclick="$.fn.list('modalOp', this, 'create')" table-selector=".tbl-1">New</button>
}