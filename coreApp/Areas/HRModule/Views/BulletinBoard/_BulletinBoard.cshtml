@model Module.DB.tblBulletinBoard

@{
    bool isReadOnly = (bool)ViewBag.uiIsReadOnly;
    bool includeId = (bool)ViewBag.uiIncludeId;
}

@if (isReadOnly)
{
    <div class="modal-view-ui pattern-bg">
        <div class="view-title">
            <sup><i class="fa fa-quote-left"></i></sup>
            @Html.DisplayFor(model => model.Title)
            <sup><i class="fa fa-quote-right"></i></sup>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <ul class="list-group">
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.Id)
                        <div>
                            @Html.DisplayFor(model => model.Id)
                        </div>
                    </li>
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.DocType)
                        <div>
                            @Html.DisplayFor(model => model.DocType_Desc)
                        </div>
                    </li>
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.DateOfPosting)
                        <div>
                            @Html.DisplayFor(model => model.DateOfPosting)
                        </div>
                    </li>
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.EndOfPosting)
                        <div>
                            @Html.DisplayFor(model => model.EndOfPosting)
                        </div>
                    </li>
                </ul>
            </div>
            <div class="col-sm-6">
                <ul class="list-group">
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.ShowInDashboard)
                        <div>
                            @(Model.ShowInDashboard ? "Yes" : "No")
                        </div>
                    </li>
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.ShowInKiosk)
                        <div>
                            @(Model.ShowInKiosk ? "Yes" : "No")
                        </div>
                    </li>
                    <li class="list-group-item">
                        @Html.LabelFor(model => model.Enabled)
                        <div>
                            @(Model.Enabled ? "Yes" : "No")
                        </div>
                    </li>
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                @Html.LabelFor(model => model.Contents)
                <div style="background-color:white;padding:20px;border:1px solid #e0e0e0">
                    @Html.Raw(Model.Contents)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <table class="createby">
                    <tbody>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CreatedBy)
                            </td>
                            <td>
                                &nbsp;:&nbsp;
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.CreatedBy)
                                <div class="small">
                                    @Html.DisplayFor(model => model.DateCreated)
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.LastUpdatedBy)
                            </td>
                            <td>
                                &nbsp;:&nbsp;
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.LastUpdatedBy)
                                <div class="small">
                                    @Html.DisplayFor(model => model.LastUpdated)
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    using (Html.BeginForm(includeId ? "Edit" : "Create", "BulletinBoard", new { area = "HRModule", id = Model.Id }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.Id)

        <div class="modal-edit-ui pattern-bg">

            <div class="row">
                <div class="col-sm-6">
                    <ul class="list-group">
                        @if (includeId)
                        {
                            <li class="list-group-item dimmed">
                                @Html.LabelFor(model => model.Id)
                                <div>
                                    @Html.DisplayFor(model => model.Id)
                                </div>
                            </li>
                        }
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.Title)
                            <div>
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", maxlength = "200", placeholder = "[Enter title]" })
                            </div>
                        </li>
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.DocType)
                            <div>
                                @Html.DropDownListFor(m => m.DocType, coreApp.SelectItems.getDocTypes(), new { @class = "form-control" })
                            </div>
                        </li>
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.DateOfPosting)
                            <div>
                                @Html.TextBoxFor(model => model.DateOfPosting, "{0:MM/dd/yyyy h:mm tt}", new { @class = "form-control datetimepicker" })
                            </div>
                        </li>
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.EndOfPosting)
                            <div>
                                @Html.TextBoxFor(model => model.EndOfPosting, "{0:MM/dd/yyyy h:mm tt}", new { @class = "form-control datetimepicker" })
                            </div>
                        </li>
                    </ul>
                </div>
                <div class="col-sm-6">
                    <ul class="list-group">
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.ShowInDashboard)
                            <div>
                                @Html.Partial("_Helper_CheckBox", "ShowInDashboard", new ViewDataDictionary { { "value", Model.ShowInDashboard } })
                            </div>
                        </li>
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.ShowInKiosk)
                            <div>
                                @Html.Partial("_Helper_CheckBox", "ShowInKiosk", new ViewDataDictionary { { "value", Model.ShowInKiosk } })
                            </div>
                        </li>
                        <li class="list-group-item">
                            @Html.LabelFor(model => model.Enabled)
                            <div>
                                @Html.Partial("_Helper_CheckBox", "Enabled", new ViewDataDictionary { { "value", Model.Enabled } })
                            </div>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.Contents)
                    <div style="background-color:white">
                        @Html.TextAreaFor(model => model.Contents, new { @class = "form-control tmce", data_height = "600" })
                    </div>
                </div>
            </div>

        </div>
    }
}
